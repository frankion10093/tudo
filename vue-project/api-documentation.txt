Todo List API 接口文档
====================

基础信息
--------
- 基础URL: http://localhost:8080/api
- 响应格式: JSON
- 认证方式: JWT Token (待实现)

通用响应格式
-----------
成功响应:
{
    "code": 200,
    "message": "success",
    "data": { ... }
}

错误响应:
{
    "code": 400/404/500,
    "message": "错误信息",
    "data": null
}

API 接口列表
-----------

1. 获取所有待办事项
------------------
请求方式: GET
URL: /todos
响应示例:
{
    "code": 200,
    "message": "success",
    "data": [
        {
            "id": 1,
            "text": "完成项目文档",
            "completed": false,
            "createdAt": "2024-03-20T10:00:00",
            "updatedAt": "2024-03-20T10:00:00"
        }
    ]
}

2. 创建待办事项
-------------
请求方式: POST
URL: /todos
请求体:
{
    "text": "String"
}
响应示例:
{
    "code": 200,
    "message": "success",
    "data": {
        "id": 1,
        "text": "完成项目文档",
        "completed": false,
        "createdAt": "2024-03-20T10:00:00",
        "updatedAt": "2024-03-20T10:00:00"
    }
}

3. 更新待办事项
-------------
请求方式: PUT
URL: /todos/{id}
请求体:
{
    "text": "String",
    "completed": "Boolean"
}
响应示例:
{
    "code": 200,
    "message": "success",
    "data": {
        "id": 1,
        "text": "更新后的待办事项",
        "completed": true,
        "createdAt": "2024-03-20T10:00:00",
        "updatedAt": "2024-03-20T10:30:00"
    }
}

4. 删除待办事项
-------------
请求方式: DELETE
URL: /todos/{id}
响应示例:
{
    "code": 200,
    "message": "success",
    "data": null
}

5. 获取待办事项统计
----------------
请求方式: GET
URL: /todos/stats
响应示例:
{
    "code": 200,
    "message": "success",
    "data": {
        "total": 10,
        "completed": 3,
        "pending": 7
    }
}

错误码说明
---------
400: 请求参数错误
404: 资源不存在
500: 服务器内部错误

注意事项
-------
1. 所有请求都需要在 header 中设置 Content-Type: application/json
2. 创建和更新待办事项时，text 字段不能为空
3. 删除操作不可恢复，请谨慎操作
4. 统计数据实时更新，反映当前待办事项的状态

前端集成说明
----------
1. 使用 axios 进行 HTTP 请求
2. 统一使用 request.js 封装的请求实例
3. 所有接口调用都在 api/todo.js 中定义
4. 错误处理统一在请求拦截器中处理

示例代码
-------
// 获取所有待办事项
const fetchTodos = async () => {
  try {
    const res = await getTodos()
    todos.value = res.data
  } catch (error) {
    console.error('Failed to fetch todos:', error)
  }
}

// 创建待办事项
const createTodo = async (text) => {
  try {
    const res = await createTodo({ text })
    return res.data
  } catch (error) {
    console.error('Failed to create todo:', error)
  }
}

// 更新待办事项
const updateTodo = async (id, data) => {
  try {
    const res = await updateTodo(id, data)
    return res.data
  } catch (error) {
    console.error('Failed to update todo:', error)
  }
}

// 删除待办事项
const deleteTodo = async (id) => {
  try {
    await deleteTodo(id)
  } catch (error) {
    console.error('Failed to delete todo:', error)
  }
}

// 获取统计数据
const fetchStats = async () => {
  try {
    const res = await getTodoStats()
    return res.data
  } catch (error) {
    console.error('Failed to fetch stats:', error)
  }
} 